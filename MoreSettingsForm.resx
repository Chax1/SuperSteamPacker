<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMGAAAAEAGACoHAAAFgAAACgAAAAwAAAAYAAAAAEAGAAAAAAAgBwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAASExMTFBQUFBQTFBMUFBQTFBMUFBQTExMTFBQTFBMTFBMUFBQTExMUFBQT
        ExMUFBQTFBMTFBMUFBQTExMUFBQTExMUFBQTExMTFBMTFBMTFBMUFBQTExMUFBQTExMTFBQTFBMTFBMU
        FBQTFBMUFBQSEhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATFRUVFhUWFhYWFhYVFhYWFxYVFhYWFxYW
        FhYWFhYVFhYVFhYWFhYVFhYWFxYVFhYWFxYVFhYWFhYWFhYVFhYWFxYVFhYWFxYWFhYWFhYVFhYVFhYW
        FhYVFhYWFxYVFhYWFhYVFhYWFhYWFhYVFhYWFxYVFhYWFxYVFhYUFRUAAAAAAAAAAAAAAAAAAAAUFRYW
        FhYWFxcWFhYWFxcWFxcWFhcWFxcWFhYWFxcWFhcWFxcWFxcWFhcWFxcWFhcWFxcWFhYWFxcWFhYWFxcW
        FxcWFhcWFxcWFhYWFxcWFhcWFxcWFxcWFhcWFxcWFhcWFxcWFhYWFxcWFhYWFxcWFxcWFhcWFxcWFhcW
        FxcWFhYVFhYAAAAAAAAAAAAVFhYWFxcXFxgWFxcXFxgWFxcXFxgXFxgXFxcXFxgWFxcXGBgXFxcXFxgX
        FxgXFxcXFxgXFxcXFxgWFxcXFxgXFxcXFxgXFxgXFxcXFxgXFxcXGBgXFxcXFxgXFxgXFxcXFxgXFxcX
        FxgWFxcXFxgXFxcXFxgXFxgXFxcXFxgXFxcXFxgXFxcVFhcAAAAAAAAXFxgXGBgXGBgXGBkXFxgYGBkX
        FxgXGBkXGBgXGBgXGBkXFxgXGBkXGBgXGBkXGBgXGBgXGBkXGBgXGBkXFxgYGBkXFxgXGBkXGBgXGBgX
        GBkXFxgXGBkXGBgXGBgXGBgXGBgXGBkXGBgXGBkXFxgYGBkXFxgXGBgXGBgXGBgXGBkXGBgYGBkXFxgA
        AAAWFxcYGRkYGRkYGRkYGRkYGRoYGRkYGRoYGBkYGRkYGRkYGRkYGRoYGRkYGRoYGRkZGhoZGhoZGhoZ
        GhoZGhoZGhoYGRkYGRoYGBkYGRkYGRkYGRkYGRoYGBkYGRoYGRkYGRkYGRkYGRkYGRkYGRkYGRoYGRkY
        GRoYGBkYGRkYGRkYGRkYGRoYGRkYGRoVFhYXGBkZGhoYGRoZGRoYGhoYGRoZGhoYGRkZGhoYGRkZGhoZ
        GhoYGRoZGhoZGhoZGxsZGhoZGxsbHB0aGxsZGhoZGhoZGxsYGRoZGhoYGRkZGhoYGhoYGRoZGhoYGRkZ
        GhoYGRoZGhoYGRoZGRoYGhoYGRoZGhoYGRkZGhoYGRkZGhoZGhoYGRoZGhoYGRoYGRoZGxsZGhsZGxsZ
        GhsZGhsZGxsZGhsaGxsZGhoaGxsZGhoaGxsZGxsaGxsbHB0sLi9ZXF19gIKLjo+EiIlnams6PT4cHh4b
        HBwZGhsaGxsZGhoZGxsZGxsZGhsaGxsZGhoaGxsZGhsZGxsZGxsZGhsZGxsZGhsaGxsZGhoaGxsZGhoZ
        GxsZGxsZGhsaGxsYGhoZGhobHBwaGxsaHBwaGxwaGxwaGxwaGxsbHBwaGxsaHBwaGxsbHR0fICFVV1if
        oqS5u72ytbeprK6vsrO6vL2usbFzdncoKiocHR0aGxsaHBwaGxsaHBwaGxwaGxsbHBwaGxsbHBwaGxsa
        HBwaGxwaGxsaHBwaGxsbHBwaGxsaHBwaGxsaHBwaGxwaGxsaGxwbHB0bHBwbHR0bHB0bHR0bHB0bHB0b
        HB0bHB0bHR0bHBwcHR4eHx9eYGGsrq+hpKZhZWY2OTksLi8vMjJPUlOOkZKytLSDhoYoKSocHh4bHB0b
        HR0bHBwbHR0bHR0bHB0bHR0bHBwbHR0bHB0bHR0bHB0bHBwbHR0bHB0bHR0bHBwbHR0bHBwbHR0bHR0a
        GxwbHB0cHh8bHR0cHh8bHR4cHh4cHR4cHR4cHR4cHR4dHx8cHh5BREShoqOTlpc/QkNER0dvcXF9gIBs
        bm49P0ApLC1zdnerq6tpa2seHyAdHx8bHR0cHh4bHR0cHh4cHR4cHR4cHh4bHR0cHh8bHR4cHh4cHR4b
        HR4cHh4bHR4cHh8bHR0cHh4bHR0cHh4bHR0cHh8dHh8dHyAcHh8dHyAcHh8dHx8dHh8dHh8dHyAeICAh
        JCR5enqlpaV6fX6Hh4ejoqKnp6anpqanpqWam5pQUlIqLS6Ji4qZmZg0NjYdHyAeHyAcHh8dHyAcHh8d
        HyAdHx8dHh8dHyAcHh8dHyAdHh8dHx8dHh8dHh8dHx8cHh8dHyAcHh8dHyAcHh8cHh8dHyAeICEeHyAe
        ICEdHyAeICEeICAfISEeICEeICAiJCVDRUWVlJSgn56ioJ+hn56gn56gnp2gnp2fnp2gnpyPj44xMzNU
        VlafnpxTVFQfICEeICEeICEdHyAeICEdHyAeICEeICEeHyAeICEdHyAeICEeHyAeICEeICAeHyAeICEe
        HyAeICEdHyAeICEcHh4dHyAeISIeISIeICEfISMeISIfIiMeISIpKyxKS0tzdHORj42Zl5abmJebmZib
        mZecmZibmZebmJecmZebmJaZl5VNUE82OTmVlJFnaWgeICIgIiMeICEfISIeICEfISIeICEeISIeISIe
        ICEfISIeICEfISIeICEeISIeICIeICEeISIeICEfISIeICEeISIfIiMfISIgIyQgIiQfISMhJCUzNjZZ
        W1p/fnyRjoyUkY+UkpCVkpCWk5GXlJKXlJKXlJOXlJOXlJKXlJOWk5GXlJJUVlYzNjaQjot+fnszNjYg
        IiMgIyQfIiMfIiQeISIfIiMeISIfIiMfIiMeISIfIiQeISIfIiQeISIfIiMfIiMfISIfIiMfISMfIiQd
        ICEfIiIhJCUfIiMnKitCRUVqammIhoSSj4yTj42Sj42Tj46TkI+UkY+VkpCVkpCVkpGWk5KXk5KWk5KW
        k5GVkpCUkpBDRkdAQkKTkY6Wk5CFhIFJTEsiJSYhJCUgIyQgIyUfIiMgIyUfIiMgIyQgIyQgIiQgIyUf
        IiMgIyUgIiQgIyQgIyQgIiQgIyQgIiMgIyQiJSYwMzNUVVR5eXeOjImSj4ySkI2TkI6TkI6TkI+UkY+V
        kpCWk5GWk5GWk5KWk5KXlJKXlJKXk5KWkpGYlZR5enopLC1lZmWXlJKYlZKYlZGSkIxmZ2UsLi8iJSYi
        JCUiJCYhIyQhJCYhIyQhJCUhJCUhIyUiJCYhIyQiJCYhIyUhJCUhIyUhIyQhJCUgIiNnaGeGhYGSkIyT
        kY6TkI2UkY6UkY+VkpCVkpCVkpGWlJKXlJOXlJOXlZSYlZSYlZSZlpSZlpWcmZiYl5Z2eHgzNjhFSEiP
        joyZl5Sal5ScmZWcmZWbmJSAgH4/QUEkJigjJScjJichJCUiJSchJCUiJSciJSciJCYiJSchJCUjJSci
        JCYiJSciJCYiJCYhJCWOjYuVk4+Vk5CWk5CWlJGXlJKXlZOYlZOYlZOYlpSYlpSZl5WZlpWYlpaZlpaZ
        l5abmZmSk5Jsb29AQ0QuMTJRU1OOjYubmZedm5iem5mem5iem5ienJifnJiWlJFbXVwqLS4jJigkJykj
        JickJygiJScjJigjJigiJScjJigiJSYjJygjJScjJigjJiciJSaRkY+Yl5SZlpSZlpSamJWamJabmZeb
        mZebmZebmZibmZibmZibmZienJyfnp6fnp6enJyBg4NkZmZsbW6FhYScmpmhnp2hn52hn52ioJ2ioJ2i
        oJ2joZ2kop6lop6hn5t6e3g5PD0kJyglKCkjJyglKCokJykkKCkkJykjJygkKCkjJigkKCkjJygkJyki
        JSeUlJKcmpicm5icm5mdnJmenJqenJqdnJqenJuenJufnZ2ioaGYmpp2eXtLT1FgZGaLjY6dnp+jo6Sj
        oqKjoaCko6KkoqGko6Klo6Klo6Glo6GmpKKmpKGmo6GnpaKopqKop6OVlpNnaWhYW1pIS0swMzQmKSsl
        KCkmKSslKCokKCklKSokJyklKSskKCkkKCqYmZegn52gn52hoJ6ioZ+hoJ+hoJ+hoJ+joqGjo6OOkZFj
        aGk6PkAnKy0nKy0mKistMTM7P0FITU+LjY6npqWopqanpqaop6apqKepqKapqKaqqaeqqaaqqKarqaes
        q6esq6iurKmvrquurqqrq6ibnJpzdnU7P0AmKSsmKy0mKislKSsmKiwlKSomKiwkJymbnJukpKKkpKKl
        pKKkpKOlpKOmpqafoaF/g4RQVFYwNDYnKy0nKy0oLC4nKiwoLC8nKy0oLC8oLC5JTlCio6Ssq6usrKyt
        rKyurayvra2vr62wr62vrqyvrqywrqywrqywr62ysa6ysa6ysq+0tLG2trS6urimp6ZZXF0oLC4oLC4n
        Ky0mKiwnKy0mKiwmKy2foaCoqKaoqKepqaipqqqXmZlscHJBRUgqLjApLC8oKy4pLC8oLC8nKy4oLC8n
        Ki0pLC8oKy4qLTArLjFtcXOvr7CysbKzsrKzs7O0s7O0tLO0s7KysrGysbCysrC1tbOytLKlp6eeoaCn
        qai3ube8vbu9vbu/wL63uLZjZ2gpLC8pLC8oKy4nKi0oLC8mKSuipaSurq6oqamKjY5aXmA1OTwpLTAp
        LC8qLjEoLC8pLTAoKy4pLTArLjEtMDMxNTgzNzk4Oz46PUA9QENGSUyanZ+8vL28vb69vb69vb69vb6+
        vb29vb28vby3uLeKjo9SVlg5PT8wNDY0ODtLT1GHi4y6vLvCw8HFxsS5urlSVlcoLC4pLTApLC8oKy4o
        LC+Rlpd3e3xITU8uMjQqLjEqLjEqLjEqLjEpLTAsMDMuMTQ1ODs5PT8+QkVBRUdCRkhDR0pCRkhER0pD
        RklESEtcX2G0trjBwsPCw8TDw8TDxMTExMXDxMS6vLxydndJTU9maWuJjIyUl5eFiIlZXV82Oj1iZ2m7
        vr3LzMvLzMulqKg0OTspLTAqLjEpLjAoLC8zNzosMDMqLjEsMDMrLzErLzIrLzIvMzY3Oj09QURDRklD
        RklESEtDRklESEtER0pER0pESEtER0lFSEtFSEpGSUx4e33Cw8XFx8jHyMnHycnHyMjDxcZ7foBNUVKO
        kZLAwsLJysnLzMvMzc3HycmTl5dJTE95fX/Nz8/P0dHNz85gZGYrLzIqLjErLzIpLTArMDMsMDMsMTQr
        LzIuMjUzNzo8QURCRklESEtFSExESEtFSU1ESEtFSUxESEtFSUxFSUxESEtFSUxESEtGSU1FSUxLT1KY
        nJ7HycvJy8zJy8zJysyprK5OUVSEh4nHycnMzc3Nzs7Oz8/Q0tLQ0tLO0NCLj5BOUVSzt7fX2dnW2dmV
        mZosMDMtMTUrLzIrLzMsMDMtMTQtMjU1OT0+QkVFSUxFSUxGSk1FSUxFSUxGSk1FSUxGSk5FSUxGSk1F
        SUxGSk1GSk1FSUxGSk1FSUxHS05GSk1bX2K3ur3Nz9HMztDMztCEiIpTV1m7vb7O0NHQ0dLQ0tLR09PT
        1dXU1tbT1dXDx8dXXF6Hi4za3d3a3d26vr89QkUuMjUtMjUqLjErMDMyODs+QkVESUxHS05FSkxHS05G
        Sk1HS05GS01GSk1GS05GSk1HTE5FSk1HS05FSk1HS05GS05GSk1HS05FSk1ITE9HS053fH/Kzc/P0dPO
        0NNvdHZna27Lzc/R09TS1NXT1NXU1tbW2NjX2trX2trU2NhtcnRzeHra3d3c39/Lz9BTV1o/REcxNjkt
        MzY6PkJDSEpHTE9HS05HS05ITE9GS05ITE9HS05HTE9HS05HS05HTE9HS05ITE9GS05ITE9GS01HTE9H
        TE9HS05ITE9HS05JTVFTWFu+wsXR09bO0dRwdHdpbnDO0dLT1tfU19jU19jW2NjX2trZ29zZ3NzX29xw
        dXdwdXfb3uDg4+TO0tNWW15HTE9FSU04PD9FSUxITVBHS05ITVBITU9ITE9ITVBHTE5JTVBITE9ITVBI
        TE9ITE9ITVBITE9JTVBHTE5ITVBHS05ITVBITU9ITE9JTVBITE9QVVi2ur3S1djS1deBhYdZXmDDx8jU
        1tfW2NnW2drX2trY29vY29zY3NzM0NJdYWSFiozg5OXg4+TDyMlQVVdJTVBITE9HTE9ITVFITE9JTlFI
        TE9JTlFJTVBITVBJTlFITE9JTlFITVBJTlFJTVBITVBJTVBITVBJTlFITE9JTlFITE9JTlFJTVBITVBK
        T1JJTVCgpKbT1djT1tiqrrBOUlWUmJrS1NbT1tfW2NnW2drX2drY29zY3Nyeo6RQVFeus7Tf4uPh5OWr
        sLFLT1JJTlFJTVFHS05ITE9KT1NJTVBKT1NJTVBKTlJKTlJJTVFKTlNJTVBKT1NJTVFKTlJJTlFJTVFK
        TlJJTVFKT1NJTVBKT1JJTVBKTlJKTlJKTlJKT1N4fYDQ09XT1tjMz9F2e35XW16mqavR1NbV2NnV2NnW
        2drV2NmtsbNaXmF2e33V2drg4+Te4uOBhYhKT1JKTlJJTVFITVBJTlJKTlJLT1NJTVFLT1NJTVFKT1NK
        T1JKTlJKT1NJTlFLT1NKTlJKT1NKTlJKTlJKT1JKTlFLT1NJTVFKT1NJTVFKT1NKT1NKT1JVWl62urzS
        1djT1ti+wcNrcHJTWFqAhYarr7G2urussLKFioxVWVxrb3HFycre4uPf4+TCx8hYXWBLT1JLT1NKTlJJ
        TVFJTlFLUFNKT1JMUVRKT1JMUVRKTlJLUFRLUFNLT1JLUFRKT1JMUVRKT1JLUFRLT1NLT1JLUFNKT1JM
        UVRKTlJLUFRKT1JLUFRMUFRLUFN1enzKzdDS1NfS1dfDx8iIjY9ZXmBPVFdPVFdQVVhZXmCIjY/IzM3d
        4OHf4uPX29x8gYNLUFNMUVVKT1JLUFNJTlFLT1NLUFNMUFRLUFNNUVVLT1NMUVVLT1NMUVVMUVRLUFNM
        UVVLT1NNUVVLUFNMUVRLUFRLUFNMUVRLUFNNUVVLT1NMUVVLT1NMUVVNUVVOU1aIjZDN0NLS1NfT1dfS
        1dfDx8issLGlqauusrPGysrY29za3d7c3+DY29yRlphPU1dNUlZLT1NNUVVLUFNLUFRMUFRMUVVMUVRM
        UVVMUVRNUlZMUFRNUlZMUFRNUVZNUVVMUVVNUlZMUFRNUlZMUVRNUVZMUVVMUVVNUVVMUVRNUlZMUFRN
        UlZMUFRNUlZNUlZQVViDiIvFyMvS1dfT1dfU1tjV19jX2drX2trY29vZ3NzZ3NzO0tOKjpBSVlpOUlZM
        UVRNUlZMUFRNUlZKT1JLUFROU1dNUlZNUlZNUlZNUlVOU1dMUVVOU1dMUVVOU1dNUlZNUlVOU1dMUVVO
        U1dNUVVOU1dNUlZNUlVNUlZNUlVOU1dMUVVOU1dMUVVNU1dOU1dOU1dpb3Kjp6rHyszU1tfW2NnW2dnW
        2dnV2NjLzs6nq61rcHNQVVlNUlZOU1dNUlZNUVVOU1dMUVVNUlZOU1hNUlZOU1dNUlZNUlZOU1dNUlZO
        VFhMUlZOU1hNUlVOU1dOU1dNUlZOU1hNUlZOVFhNUlZOU1dNUlZNUlZOU1dNUlZOVFhMUlZOU1hNUlVO
        U1dOVFhOU1dRVlphZml+g4WPk5WXm52QlJZ+g4VjaGtQVVlPVFlNUlZOVFhNUlZOU1dOU1dNUlZOU1hL
        UFRMUVVPVVlOU1dOVFhOU1dOU1dOU1hNU1dPVFlNUlZOVFhNUlZOVFhOU1hNU1dOVFhNUlZPVFlNU1dO
        VFhOU1dOU1dOU1hNU1dPVFlNUlZOVFhNUlZOVFhOVFhOU1hPVVlNUldPVFlNUlZOVFhOU1dOU1hPVFlO
        U1dPVFlNUlZOVFhNUlZOVFhOU1hNUldOU1dQVlpOU1dPVVpOVFhPVFlOU1hOU1hOVFhOU1dPVVlNU1dP
        VVlNU1dPVFlOVFhOU1dPVVlNU1dPVVlOU1dPVFlOVFhOU1hOVFhOU1dPVVlNU1dPVVlNU1dPVFlOVFhO
        VFhPVVpOVFdQVlpPVFhPVVlOVFhOU1dOVFhOU1dPVVlNU1dPVVlNU1dPVFlPVFhOVFhPVFhQVlpOVFhQ
        VlpOVFhPVVlOVFhOVFhPVFlOVFhPVVpOU1dPVVpOU1dPVVlPVVlOVFhPVVlOU1dPVVpOVFhPVVlOVFhO
        VFhPVVlOVFhPVVpOU1dPVVpOU1dPVVlPVVlOVFhPVVlOU1dPVVpOVFhPVVlOVFhOVFhPVVlOVFhPVVpN
        U1dPVVpOU1dQVVpQVloAAABSWF1QVlpPVVhQVltPVVlPVlpPVVlPVVlPVVlPVVlQVlpOVFhQVlpOVFhP
        VlpPVVlPVFlQVlpOVFhQVlpOVFhPVVpPVVlPVFlPVVlPVFhQVlpOVFhQVlpOVFhPVlpPVVlPVFhQVlpO
        VFhQVlpOVFhPVVpPVVlPVVhPVVlPVFhQVlpOVFhQVlpRV1sAAAAAAABZYGVSWFxQVltPVVlRV1xQVVlQ
        VlpPVVlPVVlQVlpPVVlRV1tPVFhQVltPVFhQVlpQVlpPVVlQVltPVFhRV1tPVVlQVlpQVVlPVVlQVlpP
        VVlRVltPVFhQVltPVFhQVlpQVlpPVVlQVltPVFhQVltPVVlQVlpQVVlPVVlQVlpPVVlRV1tRVltZYGUA
        AAAAAAAAAABdZGlTWV5RV1tQVVlSV1xQVlpRV1tQVlpQVlpRVlpQVlpRV1tPVVlRV1tQVVlRV1tRVlpQ
        VVpRV1tQVVlRV1tQVVlRV1tQVlpQVlpRVltQVlpRV1xQVVlRV1tQVVlRV1tRVltQVVpRV1tQVVlRV1xQ
        VlpRV1tQVlpQVVpRVltTWV1dZGoAAAAAAAAAAAAAAAAAAABlbHJcYmdVW2BRV1tTWV1RV1tSWFxRV1tR
        V1tRV1xRVltSWF1QVlpSWFxQVlpSWFxRV1xRVltSWFxQVlpSWF1RVltSWFxRV1tRVltSV1xRVltSWF1Q
        VlpSWFxQVlpSV1xSV1xRVltSWF1QVlpSWF1RVltSWF1UWl9cYmdkbHIAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABsc3hrc3lob3RqcXdpb3VpcHVpcHVob3NqcXZob3RqcXZob3NpcHZob3RpcHVpcHZob3NqcXZo
        bnNqcXZpb3RpcHVpcHVob3RqcXZob3NqcXZob3RpcHVob3RpcHVpcXZobnNqcXZobnNqcXZqcXdtdXoA
        AAAAAAAAAAAAAAAAAAD4AAAAAB///+AAAAAAB///wAAAAAAD//+AAAAAAAH//4AAAAAAAf//AAAAAAAA
        //8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAA
        AAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA
        //8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAA
        AAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA
        //8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//4AA
        AAAAAf//gAAAAAAB///AAAAAAAP//+AAAAAAB///+AAAAAAf//8=
</value>
  </data>
</root>